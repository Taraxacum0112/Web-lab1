Index: client.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sys\r\nimport socket\r\nimport threading\r\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\r\nfrom client_ui import Ui_MainWindow\r\n\r\nclass ClientWindow(QMainWindow):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.ui = Ui_MainWindow()\r\n        self.ui.setupUi(self)\r\n        self.ui.button_connect.clicked.connect(self.toggle_connection)\r\n        self.client_socket = None\r\n        self.is_connected = False\r\n        self.ui.label_status.setText(\"Статус: не подключён\")\r\n\r\n    def toggle_connection(self):\r\n        if not self.is_connected:\r\n            self.connect_to_server()\r\n        else:\r\n            self.disconnect_from_server()\r\n\r\n    def connect_to_server(self):\r\n        full_text = self.ui.line_ip.text()\r\n        ip = full_text.replace('IP: ', '').strip()\r\n        port = 10000\r\n        try:\r\n            self.client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n            self.client_socket.connect((ip, port))\r\n            self.is_connected = True\r\n            self.ui.label_status.setText(\"Статус: подключён\")\r\n            self.ui.button_connect.setText(\"Отключиться\")\r\n            print(f'Подключено к серверу на {ip}:{port}')\r\n        except Exception as e:\r\n            print(f'Ошибка подключения: {str(e)}')\r\n            self.ui.label_status.setText(\"Ошибка подключения\")\r\n\r\n    def disconnect_from_server(self):\r\n        if self.client_socket:\r\n            self.client_socket.close()\r\n        self.is_connected = False\r\n        self.ui.label_status.setText(\"Статус: не подключён\")\r\n        self.ui.button_connect.setText(\"Подключиться\")\r\n        print(\"Отключено от сервера\")\r\n\r\nif __name__ == '__main__':\r\n    app = QApplication(sys.argv)\r\n    window = ClientWindow()\r\n    window.show()\r\n    sys.exit(app.exec_())\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/client.py b/client.py
--- a/client.py	(revision 9ff1f9a5cce7aff477021b2a9b1fefba3dfbc614)
+++ b/client.py	(date 1727763755412)
@@ -10,6 +10,7 @@
         self.ui = Ui_MainWindow()
         self.ui.setupUi(self)
         self.ui.button_connect.clicked.connect(self.toggle_connection)
+        self.ui.button_send.clicked.connect(self.send_message)
         self.client_socket = None
         self.is_connected = False
         self.ui.label_status.setText("Статус: не подключён")
@@ -30,21 +31,47 @@
             self.is_connected = True
             self.ui.label_status.setText("Статус: подключён")
             self.ui.button_connect.setText("Отключиться")
-            print(f'Подключено к серверу на {ip}:{port}')
+            self.ui.textBrowser.append('Подключено к серверу')
+            receive_thread = threading.Thread(target=self.receive_message)
+            receive_thread.start()
         except Exception as e:
             print(f'Ошибка подключения: {str(e)}')
             self.ui.label_status.setText("Ошибка подключения")
 
+    def send_message(self):
+        if self.client_socket and self.is_connected:
+            message = self.ui.line_message.text()
+            if message:
+                self.ui.textBrowser.append(f'Клиент: {message}')
+                self.client_socket.sendall(f'Клиент: {message}'.encode())
+                self.ui.line_message.clear()
+        else:
+            self.ui.textBrowser.append("Сообщение не отправлено: нет подключения к серверу")
+
+    def receive_message(self):
+        try:
+            while self.is_connected:
+                data = self.client_socket.recv(1024).decode()
+                if data:
+                    self.ui.textBrowser.append(data)
+                else:
+                    self.ui.textBrowser.append("Соединение с сервером потеряно")
+                    break
+        except:
+            pass
+        finally:
+            self.disconnect_from_server()
+
     def disconnect_from_server(self):
         if self.client_socket:
             self.client_socket.close()
         self.is_connected = False
         self.ui.label_status.setText("Статус: не подключён")
         self.ui.button_connect.setText("Подключиться")
-        print("Отключено от сервера")
+        self.ui.textBrowser.append("Отключено от сервера")
 
 if __name__ == '__main__':
     app = QApplication(sys.argv)
     window = ClientWindow()
     window.show()
-    sys.exit(app.exec_())
+    sys.exit(app.exec_())
\ No newline at end of file
Index: server.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import sys\r\nimport socket\r\nimport threading\r\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\r\nfrom server_ui import Ui_MainWindow\r\n\r\nclass ServerWindow(QMainWindow):\r\n    def __init__(self):\r\n        super().__init__()\r\n        self.ui = Ui_MainWindow()\r\n        self.ui.setupUi(self)\r\n        self.ui.button_run.clicked.connect(self.toggle_server)\r\n        self.server_socket = None\r\n        self.is_running = False\r\n        self.ip = socket.gethostbyname(socket.gethostname())\r\n        self.port = 10000\r\n        self.ui.label_ip.setText(f'IP: {self.ip}')\r\n        self.ui.label_status.setText(\"Статус: не подключён\")\r\n\r\n    def toggle_server(self):\r\n        if not self.is_running:\r\n            self.start_server()\r\n        else:\r\n            self.stop_server()\r\n\r\n    def start_server(self):\r\n        self.ui.button_run.setText(\"Остановить\")\r\n        self.is_running = True\r\n        self.ui.label_status.setText(\"Статус: не подключён\")\r\n        self.server_thread = threading.Thread(target=self.run_server)\r\n        self.server_thread.start()\r\n\r\n    def stop_server(self):\r\n        if self.server_socket:\r\n            self.is_running = False\r\n            self.server_socket.close()\r\n        self.ui.button_run.setText(\"Запустить\")\r\n        self.ui.label_status.setText(\"Статус: не подключён\")\r\n\r\n    def run_server(self):\r\n        try:\r\n            self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\r\n            self.server_socket.bind((self.ip, self.port))\r\n            self.server_socket.listen(1)\r\n            print(f'Сервер запущен на {self.ip}:{self.port}, ожидание подключения...')\r\n            while self.is_running:\r\n                connection, address = self.server_socket.accept()\r\n                print(f'Клиент подключен: {address}')\r\n                self.ui.label_status.setText(\"Статус: подключён\")\r\n                try:\r\n                    while self.is_running:\r\n                        data = connection.recv(1024).decode()\r\n                        if not data:\r\n                            break\r\n                        print(f'Сообщение от клиента: {data}')\r\n                except:\r\n                    pass\r\n                connection.close()\r\n                print(\"Клиент отключился\")\r\n                self.ui.label_status.setText(\"Статус: не подключён\")\r\n        except Exception as e:\r\n            print(f'Ошибка: {str(e)}')\r\n        finally:\r\n            if self.server_socket:\r\n                self.server_socket.close()\r\n\r\nif __name__ == '__main__':\r\n    app = QApplication(sys.argv)\r\n    window = ServerWindow()\r\n    window.show()\r\n    sys.exit(app.exec_())\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/server.py b/server.py
--- a/server.py	(revision 9ff1f9a5cce7aff477021b2a9b1fefba3dfbc614)
+++ b/server.py	(date 1727763741016)
@@ -10,7 +10,9 @@
         self.ui = Ui_MainWindow()
         self.ui.setupUi(self)
         self.ui.button_run.clicked.connect(self.toggle_server)
+        self.ui.button_send.clicked.connect(self.send_message)
         self.server_socket = None
+        self.connection = None
         self.is_running = False
         self.ip = socket.gethostbyname(socket.gethostname())
         self.port = 10000
@@ -33,7 +35,10 @@
     def stop_server(self):
         if self.server_socket:
             self.is_running = False
+            if self.connection:
+                self.connection.close()
             self.server_socket.close()
+            self.ui.textBrowser.append("Сервер остановлен")
         self.ui.button_run.setText("Запустить")
         self.ui.label_status.setText("Статус: не подключён")
 
@@ -42,27 +47,43 @@
             self.server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
             self.server_socket.bind((self.ip, self.port))
             self.server_socket.listen(1)
-            print(f'Сервер запущен на {self.ip}:{self.port}, ожидание подключения...')
+            self.ui.textBrowser.append('Сервер запущен, ожидание подключения...')
             while self.is_running:
-                connection, address = self.server_socket.accept()
-                print(f'Клиент подключен: {address}')
+                self.connection, address = self.server_socket.accept()
                 self.ui.label_status.setText("Статус: подключён")
-                try:
-                    while self.is_running:
-                        data = connection.recv(1024).decode()
-                        if not data:
-                            break
-                        print(f'Сообщение от клиента: {data}')
-                except:
-                    pass
-                connection.close()
-                print("Клиент отключился")
-                self.ui.label_status.setText("Статус: не подключён")
-        except Exception as e:
-            print(f'Ошибка: {str(e)}')
+                self.ui.textBrowser.append('Клиент подключен')
+                receive_thread = threading.Thread(target=self.receive_message)
+                receive_thread.start()
+        except Exception as e:
+            print(f'Ошибка: {str(e)}')
+        finally:
+            if self.server_socket:
+                self.server_socket.close()
+
+    def send_message(self):
+        if self.connection:
+            message = self.ui.line_message.text()
+            if message:
+                self.ui.textBrowser.append(f'Сервер: {message}')
+                self.connection.sendall(f'Сервер: {message}'.encode())
+                self.ui.line_message.clear()
+        else:
+            self.ui.textBrowser.append("Сообщение не отправлено: нет подключения к клиенту")
+
+    def receive_message(self):
+        try:
+            while self.is_running:
+                data = self.connection.recv(1024).decode()
+                if data:
+                    self.ui.textBrowser.append(data)
+                else:
+                    self.ui.textBrowser.append("Клиент отключился")
+                    break
+        except:
+            pass
         finally:
-            if self.server_socket:
-                self.server_socket.close()
+            self.connection = None
+            self.ui.label_status.setText("Статус: не подключён")
 
 if __name__ == '__main__':
     app = QApplication(sys.argv)
